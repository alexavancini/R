sqrt(16)
sqrt(9)
sqrt(25)

x <- 10
sqrt(x)


factorial(2)
factorial(4)
factorial(6)
factoril(x)

y <- -4
abs(y) #Retorna o valor absoluto do número

round(1.4)
round(1.5)

round(1.4999999999999)

round(4.6789, digits = 3)
round(4.6789, digits = 2)
round(4.6789, digits = 1)

signif(100/3,digits = 3) #signif trabalha com digits como a quantidade de digitos do resultado inteiro
round(100/3,digits = 3) #round trabalha com digits igual ao número di digitos depois da virgula

ceiling(1.9999) #Arredonada para o próximo número inteiro
ceiling(1.6666)
ceiling(1.2222)
ceiling(1.0001)

floor(1.9999) #Arredonda para o número inteiro anterior
floor(1.6666)
floor(1.2222)
floor(1.0001)

trunc(100/3) #trunc elimina a parte decimal do número, enquanto o floor só não mostra na apresentação.

log10(10)
log10(100)

log(10, base = 3.4076)
log(10, base = 2)

round(log(x,base = 2), digits = 3)
signif(log(x,base = 2), digits = 3)
floor(log(x,base = 2), digits = 3)
ceiling(log(x,base = 2), digits = 3)
trunc(log(x,base = 2), digits = 3)


w=c(10,20,30,40,50)
w
a=c(1:10)
a

a1=1.5:10
a1

b=w+a
b

#Generating regular sequences
seq(1,10,by=0.5)
seq(1,50, by=5)
f=seq(1,10,by=0.5)

s5 <- rep(i, times=5)
s5

sum(f)
a1
sum(a1)
1.5+2.5+3.5+4.5+5.5+6.5+7.5+8.5+9.5


f=seq(1,10,by=0.5)
f
f1 = seq(length=51,from=-5, by=.2)
f1
f2 = seq(length=51,from=-5, by=.1)
f2

rep(5,3)
rep(10,5)
rep(8,10)

length(w)
length(a)
length(f)

mean(w)
median(w)
mean(a)
median(a)

mean(b)
median(b)
sd(a)

c=c(11:20,1:10,21:30)
c
c1=c("alex","amauri","angela","allan")
c1
sort(c1)
sort.list(c1)

sort(c)
sort.list(c)

order(c)
rev(sort(c))
d[!Worm.density=="NA",]

mean(c)
median(c)

max(c)
min(c)
range(c)

sin(9)
cos(9)
tan(9)

asin(1)
acos(1)
atan(1)

pi

sin(pi)
cos(pi)
tan(pi)

exp(2)

d=(x+y+z)-mean(w)*median(c)/sqrt(y)+max(a)^4
d


e=((x+y+z)-mean(w))*(median(c)/sqrt(y))+(max(a)^4)+(log(10)-sin(9)-tan(8))+pi
e

e1=((x+y+z)-mean(w))*
  (median(c)/sqrt(y))+
  (max(a)^4)+
  (log(10)-sin(9)-tan(8))+
  pi
e1

e==e1
