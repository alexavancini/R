#Generating regular sequences
x <- 10
typeof(x)
x

y <- 1.5:10
typeof(y)
y

seq(1,10,by=0.5)
seq(1,50, by=5)
f=seq(1,10,by=0.5)

f2 <-scan() #enter
#ctrl+V

mean(f)
median(f)

g <- c(1,7,30,40,50) #c = combine
g

mean(g)
median(g)

h <- rep(2, times=5)
h

i=c(11:20,1:10,2:30,7,14,9)
i

j=c("alex","amauri","angela","allan")
j

sort(j)
sort.list(j)

sort(i)
sort.list(i)

l <- 1:5
m <- 20:25
n <- c(l,m)
n

o <- c("Genética", "Evolução", "Bioinformática", "Botânica")
o
is.numeric(o)
is.double(o)
is.integer(o)
is.logical(o)
is.vector(o)
is.character(o)

is.numeric(l)
is.double(m)
is.integer(m)
is.numeric(m)

is.(...)
str(o)
str(l)
str(m)
str(c)

length(o)
length(m)
length(c)


#Manipulando vetores
o
o[2]
o[4]
o[c(1,3)]
print(o[c(1,3)])

o[c(2,4)]
print(o[c(2,4)])

o[c(-1,-4)]
o[c(-2,-3)]
o[c(-4)]
o[c(-length(o))]

n
n[c(1:5)]
n[c(6:11)]
n[c(6:length(n))]

n[c(1,3,7,8,9)]
n[c(1:3,7:9)]

o
o[2] <- "Fisiologia"
o
o[4] <- "Ecologia"
o
o[4] <- NULL
o <- c("Genética", "Fisiologia", "Bioinformática", "Ecologia")  

o <- NULL #Função NULL apaga os dados das posições do vetor mas o vetor continua a existir (permanece declarado)
rm(o) #A função rm remove o vetor, ou seja, retira o vetor da alocaão da memória.

#Combinação
numeros_combinados = c(101,201,301,401,501) # a função "c" (combinação) permite indicar os elementos que serão atribuídos ao objeto
string_combinadas = c("João","Maria","José","Pedro","Ana")

#Ficar atento ao combinar diferentes tipos de dados num mesmo objeto, ex: string e inteiror em uma mesma combinação.
#O R consegue processar o pedido mas poderá haver problemas na hora de realizar tratamento estatístico.

#Cálculos com vetores combinados
notaProva1 = c(10,9,9.5,8,9)
notaProva2 = c(9,9.5,10,9,8)
notaTotal = notaProva1 + notaProva2
print(notaTotal)

